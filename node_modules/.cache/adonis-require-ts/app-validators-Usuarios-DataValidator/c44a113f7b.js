"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class DataValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            nom_usuario: Validator_1.schema.string({}, [Validator_1.rules.trim(), Validator_1.rules.maxLength(400), Validator_1.rules.minLength(3)]),
            login: Validator_1.schema.string({}, [
                Validator_1.rules.trim(),
                Validator_1.rules.maxLength(400),
                Validator_1.rules.minLength(3),
                Validator_1.rules.unique({ table: 'usuarios', column: 'login' }),
            ]),
            password: Validator_1.schema.string({}, [Validator_1.rules.trim(), Validator_1.rules.maxLength(400), Validator_1.rules.minLength(6)]),
        });
        this.messages = {
            'required': 'É necessário preencher o campo {{ field }}',
            'nom_usuario.minLength': 'Informe no minimo 3 caracteres no campo {{ field }}',
            'login.minLength': 'Informe no minimo 3 caracteres no campo {{ field }}',
            'password.minLength': 'Informe no minimo 6 caracteres no campo {{ field }}',
            'maxLength': 'Informe no máximo 400 caracteres no campo {{ field }}',
            'unique': 'Campo {{ field }} já existe com o valor informado',
        };
    }
}
exports.default = DataValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YVZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkRhdGFWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwyRUFBMEU7QUFFMUUsTUFBcUIsYUFBYTtJQUNoQyxZQUFzQixHQUF3QjtRQUF4QixRQUFHLEdBQUgsR0FBRyxDQUFxQjtRQUV2QyxXQUFNLEdBQUcsa0JBQU0sQ0FBQyxNQUFNLENBQUM7WUFDNUIsV0FBVyxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLGlCQUFLLENBQUMsSUFBSSxFQUFFLEVBQUUsaUJBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsaUJBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN4RixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO2dCQUN2QixpQkFBSyxDQUFDLElBQUksRUFBRTtnQkFDWixpQkFBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7Z0JBQ3BCLGlCQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDbEIsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQzthQUNyRCxDQUFDO1lBQ0YsUUFBUSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLGlCQUFLLENBQUMsSUFBSSxFQUFFLEVBQUUsaUJBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsaUJBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN0RixDQUFDLENBQUE7UUFFSyxhQUFRLEdBQW1CO1lBQ2hDLFVBQVUsRUFBRSw0Q0FBNEM7WUFDeEQsdUJBQXVCLEVBQUUscURBQXFEO1lBQzlFLGlCQUFpQixFQUFFLHFEQUFxRDtZQUN4RSxvQkFBb0IsRUFBRSxxREFBcUQ7WUFDM0UsV0FBVyxFQUFFLHVEQUF1RDtZQUNwRSxRQUFRLEVBQUUsbURBQW1EO1NBQzlELENBQUE7SUFwQmdELENBQUM7Q0FxQm5EO0FBdEJELGdDQXNCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXG5pbXBvcnQgeyBDdXN0b21NZXNzYWdlcywgcnVsZXMsIHNjaGVtYSB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvVmFsaWRhdG9yJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRhVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGN0eDogSHR0cENvbnRleHRDb250cmFjdCkge31cblxuICBwdWJsaWMgc2NoZW1hID0gc2NoZW1hLmNyZWF0ZSh7XG4gICAgbm9tX3VzdWFyaW86IHNjaGVtYS5zdHJpbmcoe30sIFtydWxlcy50cmltKCksIHJ1bGVzLm1heExlbmd0aCg0MDApLCBydWxlcy5taW5MZW5ndGgoMyldKSxcbiAgICBsb2dpbjogc2NoZW1hLnN0cmluZyh7fSwgW1xuICAgICAgcnVsZXMudHJpbSgpLFxuICAgICAgcnVsZXMubWF4TGVuZ3RoKDQwMCksXG4gICAgICBydWxlcy5taW5MZW5ndGgoMyksXG4gICAgICBydWxlcy51bmlxdWUoeyB0YWJsZTogJ3VzdWFyaW9zJywgY29sdW1uOiAnbG9naW4nIH0pLFxuICAgIF0pLFxuICAgIHBhc3N3b3JkOiBzY2hlbWEuc3RyaW5nKHt9LCBbcnVsZXMudHJpbSgpLCBydWxlcy5tYXhMZW5ndGgoNDAwKSwgcnVsZXMubWluTGVuZ3RoKDYpXSksXG4gIH0pXG5cbiAgcHVibGljIG1lc3NhZ2VzOiBDdXN0b21NZXNzYWdlcyA9IHtcbiAgICAncmVxdWlyZWQnOiAnw4kgbmVjZXNzw6FyaW8gcHJlZW5jaGVyIG8gY2FtcG8ge3sgZmllbGQgfX0nLFxuICAgICdub21fdXN1YXJpby5taW5MZW5ndGgnOiAnSW5mb3JtZSBubyBtaW5pbW8gMyBjYXJhY3RlcmVzIG5vIGNhbXBvIHt7IGZpZWxkIH19JyxcbiAgICAnbG9naW4ubWluTGVuZ3RoJzogJ0luZm9ybWUgbm8gbWluaW1vIDMgY2FyYWN0ZXJlcyBubyBjYW1wbyB7eyBmaWVsZCB9fScsXG4gICAgJ3Bhc3N3b3JkLm1pbkxlbmd0aCc6ICdJbmZvcm1lIG5vIG1pbmltbyA2IGNhcmFjdGVyZXMgbm8gY2FtcG8ge3sgZmllbGQgfX0nLFxuICAgICdtYXhMZW5ndGgnOiAnSW5mb3JtZSBubyBtw6F4aW1vIDQwMCBjYXJhY3RlcmVzIG5vIGNhbXBvIHt7IGZpZWxkIH19JyxcbiAgICAndW5pcXVlJzogJ0NhbXBvIHt7IGZpZWxkIH19IGrDoSBleGlzdGUgY29tIG8gdmFsb3IgaW5mb3JtYWRvJyxcbiAgfVxufVxuIl19