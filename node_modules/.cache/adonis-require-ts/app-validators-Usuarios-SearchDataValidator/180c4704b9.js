"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class SearchDataValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            params: Validator_1.schema.object().members({
                id: Validator_1.schema.string([
                    Validator_1.rules.trim(),
                    Validator_1.rules.uuid({ version: 4 }),
                    Validator_1.rules.exists({ table: 'usuarios', column: 'id' }),
                ]),
            }),
        });
        this.messages = {
            required: 'É necessário preencher o campo {{ field }}',
            minLength: 'Informe no minimo 3 caracteres no campo {{ field }}',
            maxLength: 'Informe no máximo 400 caracteres no campo {{ field }}',
            uuid: 'Necessário informar um ID no formato UUID V4 no campo {{ field }}',
            exists: 'Campo {{ field }} não faz referência a um registro cadastrado',
        };
    }
}
exports.default = SearchDataValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VhcmNoRGF0YVZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlNlYXJjaERhdGFWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSwyRUFBMEU7QUFFMUUsTUFBcUIsbUJBQW1CO0lBQ3RDLFlBQXNCLEdBQXdCO1FBQXhCLFFBQUcsR0FBSCxHQUFHLENBQXFCO1FBRXZDLFdBQU0sR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1QixNQUFNLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxPQUFPLENBQUM7Z0JBQzlCLEVBQUUsRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQztvQkFDaEIsaUJBQUssQ0FBQyxJQUFJLEVBQUU7b0JBQ1osaUJBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7b0JBQzFCLGlCQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUM7aUJBQ2xELENBQUM7YUFDSCxDQUFDO1NBQ0gsQ0FBQyxDQUFBO1FBRUssYUFBUSxHQUFtQjtZQUNoQyxRQUFRLEVBQUUsNENBQTRDO1lBQ3RELFNBQVMsRUFBRSxxREFBcUQ7WUFDaEUsU0FBUyxFQUFFLHVEQUF1RDtZQUNsRSxJQUFJLEVBQUUsbUVBQW1FO1lBQ3pFLE1BQU0sRUFBRSwrREFBK0Q7U0FDeEUsQ0FBQTtJQWxCZ0QsQ0FBQztDQW1CbkQ7QUFwQkQsc0NBb0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcbmltcG9ydCB7IEN1c3RvbU1lc3NhZ2VzLCBydWxlcywgc2NoZW1hIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9WYWxpZGF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlYXJjaERhdGFWYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY3R4OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7fVxuXG4gIHB1YmxpYyBzY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcbiAgICBwYXJhbXM6IHNjaGVtYS5vYmplY3QoKS5tZW1iZXJzKHtcbiAgICAgIGlkOiBzY2hlbWEuc3RyaW5nKFtcbiAgICAgICAgcnVsZXMudHJpbSgpLFxuICAgICAgICBydWxlcy51dWlkKHsgdmVyc2lvbjogNCB9KSxcbiAgICAgICAgcnVsZXMuZXhpc3RzKHsgdGFibGU6ICd1c3VhcmlvcycsIGNvbHVtbjogJ2lkJyB9KSxcbiAgICAgIF0pLFxuICAgIH0pLFxuICB9KVxuXG4gIHB1YmxpYyBtZXNzYWdlczogQ3VzdG9tTWVzc2FnZXMgPSB7XG4gICAgcmVxdWlyZWQ6ICfDiSBuZWNlc3PDoXJpbyBwcmVlbmNoZXIgbyBjYW1wbyB7eyBmaWVsZCB9fScsXG4gICAgbWluTGVuZ3RoOiAnSW5mb3JtZSBubyBtaW5pbW8gMyBjYXJhY3RlcmVzIG5vIGNhbXBvIHt7IGZpZWxkIH19JyxcbiAgICBtYXhMZW5ndGg6ICdJbmZvcm1lIG5vIG3DoXhpbW8gNDAwIGNhcmFjdGVyZXMgbm8gY2FtcG8ge3sgZmllbGQgfX0nLFxuICAgIHV1aWQ6ICdOZWNlc3PDoXJpbyBpbmZvcm1hciB1bSBJRCBubyBmb3JtYXRvIFVVSUQgVjQgbm8gY2FtcG8ge3sgZmllbGQgfX0nLFxuICAgIGV4aXN0czogJ0NhbXBvIHt7IGZpZWxkIH19IG7Do28gZmF6IHJlZmVyw6puY2lhIGEgdW0gcmVnaXN0cm8gY2FkYXN0cmFkbycsXG4gIH1cbn1cbiJdfQ==